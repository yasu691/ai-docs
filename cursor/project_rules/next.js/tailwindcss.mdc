---
applyTo: "**/*.css,**/*.tsx,**/*.jsx,tailwind.config.js,tailwind.config.ts"
---

# Tailwind CSS ベストプラクティス

## プロジェクト設定

- 適切なTailwind設定を使用する
- テーマ拡張を適切に設定する
- 適切なパージ設定を行う
- プラグイン統合を適切に使用する
- カスタムスペーシングとブレークポイントを設定する
- 適切なカラーパレットを設定する

## コンポーネントスタイリング

- カスタムCSSよりもユーティリティクラスを使用する
- 必要に応じて@applyで関連するユーティリティをグループ化する
- 適切なレスポンシブデザインユーティリティを使用する
- ダークモードを適切に実装する
- 適切な状態バリアントを使用する
- コンポーネントスタイルの一貫性を保つ

## レイアウト

- FlexboxとGridユーティリティを効果的に使用する
- 適切なスペーシングシステムを実装する
- 必要に応じてコンテナクエリを使用する
- 適切なレスポンシブブレークポイントを実装する
- 適切なパディングとマージンユーティリティを使用する
- 適切な配置ユーティリティを実装する

## タイポグラフィ

- 適切なフォントサイズユーティリティを使用する
- 適切な行の高さを実装する
- 適切なフォントウェイトユーティリティを使用する
- カスタムフォントを適切に設定する
- 適切なテキスト配置を使用する
- 適切なテキスト装飾を実装する

## カラー

- セマンティックなカラー命名を使用する
- 適切なカラーコントラストを実装する
- 不透明度ユーティリティを効果的に使用する
- カスタムカラーを適切に設定する
- 適切なグラデーションユーティリティを使用する
- 適切なホバー状態を実装する

## コンポーネント

- shadcn/uiコンポーネントが利用可能な場合は使用する
- コンポーネントを適切に拡張する
- コンポーネントバリアントの一貫性を保つ
- 適切なアニメーションを実装する
- 適切なトランジションユーティリティを使用する
- アクセシビリティを考慮する

## レスポンシブデザイン

- モバイルファーストアプローチを使用する
- 適切なブレークポイントを実装する
- コンテナクエリを効果的に使用する
- 異なる画面サイズを適切に処理する
- 適切なレスポンシブタイポグラフィを実装する
- 適切なレスポンシブスペーシングを使用する

## パフォーマンス

- 適切なパージ設定を使用する
- カスタムCSSを最小化する
- 適切なキャッシュ戦略を使用する
- 適切なコード分割を実装する
- 本番環境用に最適化する
- バンドルサイズを監視する

## ベストプラクティス

- 命名規則に従う
- スタイルを整理して保つ
- 適切なドキュメント化を使用する
- 適切なテストを実装する
- アクセシビリティガイドラインに従う
- 適切なバージョン管理を使用する
